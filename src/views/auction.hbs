<div class="w-full">
    <div class="flex flex-col sm:flex-row sm:items-center sm:justify-between gap-3 border-b border-gray-200 pb-3 mb-4">
        <!-- Title -->
        <h1 class="text-2xl font-semibold text-gray-800">Autions</h1>

        <!-- Breadcrumb -->
        <nav class="flex items-center text-sm text-gray-600 whitespace-nowrap overflow-x-auto">
            <ol class="inline-flex items-center space-x-1 sm:space-x-2">
                <li>
                    <a href="/" class="text-gray-500 hover:text-gray-700 flex items-center">
                        <svg xmlns="http://www.w3.org/2000/svg" class="w-4 h-4 mr-1" viewBox="0 0 24 24" fill="none"
                            stroke="currentColor">
                            <g clip-path="url(#clip0_4418_4931)">
                                <path opacity="0.4"
                                    d="M20.83 8.01002L14.28 2.77002C13 1.75002 11 1.74002 9.72996 2.76002L3.17996 8.01002C2.23996 8.76002 1.66996 10.26 1.86996 11.44L3.12996 18.98C3.41996 20.67 4.98996 22 6.69996 22H17.3C18.99 22 20.59 20.64 20.88 18.97L22.14 11.43C22.32 10.26 21.75 8.76002 20.83 8.01002Z"
                                    fill="white" style="fill: var(--fillg);" />
                                <path
                                    d="M12 18.75C11.59 18.75 11.25 18.41 11.25 18V15C11.25 14.59 11.59 14.25 12 14.25C12.41 14.25 12.75 14.59 12.75 15V18C12.75 18.41 12.41 18.75 12 18.75Z"
                                    fill="white" style="fill: var(--fillg);" />
                            </g>
                            <defs>
                                <clipPath id="clip0_4418_4931">
                                    <rect width="24" height="24" fill="white" />
                                </clipPath>
                            </defs>
                        </svg>
                        Home
                    </a>
                </li>
                {{!-- <li>
                    <span class="mx-1">/</span>
                    <a href="/autions" class="text-gray-500 hover:text-gray-700">Projects</a>
                </li> --}}
                <li>
                    <span class="mx-1">/</span>
                    <span class="text-gray-800 font-medium">Autions</span>
                </li>
            </ol>
        </nav>
    </div>
    <div class="p-6 bg-white rounded shadow">
        <div class="flex justify-between align-middle">
            <h3 class="text-lg font-semibold mb-4">My Autions</h3>
            <button id="openModal"
                class="bg-blue-600 text-white py-1 px-2 rounded-md font-semibold hover:bg-blue-700 transition">Create
                Aution</button>
        </div>
        <table class="w-full text-sm text-left">
            <thead class="text-gray-500">
                <tr>
                    <th class="py-2">Title</th>
                    <th>Description</th>
                    <th>End Time</th>
                    <th>Total Bids</th>
                    <th>Highest Bid</th>
                </tr>
            </thead>
            <tbody>
                {{#each list}}
                <tr class="border-t">
                    <!-- Auction title with icon -->
                    <td class="py-2 flex items-center space-x-2">
                        <div class="h-5 w-5 bg-gray-300 rounded-full"></div>
                        <span>{{this.title}}</span>
                    </td>

                    <!-- Description -->
                    <td class="py-2">
                        {{this.description}}
                    </td>

                    <!-- End date -->
                    <td class="py-2 text-sm text-gray-600">
                        {{formatDate this.endsAt "YYYY-MM-DD HH:mm"}}
                    </td>

                    <!-- Total Bids -->
                    <td class="py-2 text-center">
                        {{this.totalBids}}
                    </td>

                    <!-- Highest Bid -->
                    <td class="py-2 text-center font-semibold text-yellow-600">
                        ⭐ {{this.highestBid}}
                    </td>
                </tr>
                {{else}}
                <tr>
                    <td colspan="5" class="py-6 text-center text-gray-500">
                        <div class="flex flex-col items-center justify-center space-y-2">
                            <!-- Empty state icon -->
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-gray-400" fill="none"
                                viewBox="0 0 24 24" stroke="currentColor" stroke-width="1.5">
                                <path stroke-linecap="round" stroke-linejoin="round"
                                    d="M9 17v-2a4 4 0 018 0v2m-4-9a4 4 0 100 8 4 4 0 000-8z" />
                            </svg>
                            <span>No auctions available</span>
                        </div>
                    </td>
                </tr>
                {{/each}}
            </tbody>
        </table>

    </div>
</div>
<!-- Modal Background (hidden by default) -->
<form id="autionForm" method="post">
    <div id="modal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50 flex items-center justify-center">

        <!-- Modal Box -->
        <div class="bg-white rounded-lg shadow-lg w-11/12 max-w-md p-6 relative">

            <!-- Close Button -->
            <button id="closeModal" class="absolute top-3 right-3 text-gray-500 hover:text-gray-700">
                ✕
            </button>

            <!-- Title -->
            <h2 class="text-xl font-semibold text-gray-800 mb-4">Create Aution</h2>

            {{#if errors}}
            <div class="mb-4 rounded-lg border border-red-300 bg-red-50 p-4 text-sm text-red-800" role="alert">
                <span class="font-semibold">There were some problems with your submission:</span>
                <ul class="mt-2 list-disc list-inside">
                    {{#each errors}}
                    <li>{{this}}</li>
                    {{/each}}
                </ul>
            </div>
            {{/if}}
            {{#if success}}
            <div class="mb-4 rounded-lg border border-green-300 bg-green-50 p-4 text-sm text-green-800" role="alert">
                <span class="font-semibold">{{success}}</span>
            </div>
            {{/if}}
            {{#if error}}
            <div class="mb-4 rounded-lg border border-red-300 bg-red-50 p-4 text-sm text-red-800" role="alert">
                <span class="font-semibold">{{error}}</span>
            </div>
            {{/if}}
            <!-- Body -->
            <div class="mb-4">
                <input type="text" name="title" value="{{old.title}}" id="title" placeholder="Aution Title"
                    class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" />
                <p id="titleError" class="text-red-500 text-xs"></p>
            </div>
            <div class="mb-4">
                <textarea name="description" id="description" placeholder="Aution Description"
                    class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500">{{old.description}}</textarea>
                <p id="descriptionError" class="text-red-500 text-xs"></p>
            </div>
            <div class="mb-4">
                <input type="datetime-local" value="{{old.endsAt}}" name="endsAt" id="endsAt" placeholder="End Time"
                    class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" />
                <p id="endsAtError" class="text-red-500 text-xs"></p>
            </div>
            <!-- Actions -->
            <div class="flex justify-end space-x-3">
                <button id="closeBtn" type="button"
                    class="px-4 py-2 bg-gray-200 text-gray-700 rounded hover:bg-gray-300">
                    Cancel
                </button>
                <button class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700">
                    Create
                </button>
            </div>
        </div>
    </div>
</form>



<script type="module">
    import * as yup from "https://cdn.jsdelivr.net/npm/yup@1.3.3/+esm";
    const modal = document.getElementById("modal");
    const openModal = document.getElementById("openModal");
    const closeModal = document.getElementById("closeModal");
    const closeBtn = document.getElementById("closeBtn");

    openModal.addEventListener("click", () => {
        modal.classList.remove("hidden");
    });

    closeModal.addEventListener("click", () => {
        modal.classList.add("hidden");
    });

    closeBtn.addEventListener("click", () => {
        modal.classList.add("hidden");
    });

    // Close when clicking outside modal box
    /* modal.addEventListener("click", (e) => { --}}
        if (e.target === modal) modal.classList.add("hidden");
    });*/

    // Define validation schema
    const schema = yup.object().shape({
        title: yup.string().required("Auction title is required").min(3, "Title must be at least 3 characters"),
        description: yup.string().required("Description is required").min(10, "Description must be at least 10 characters"),
        endsAt: yup.date()
            .typeError("Invalid date")
            .min(new Date(), "End time must be in the future")
            .required("End time is required"),
    });

    // Handle form submit
    document.querySelector("#autionForm").addEventListener("submit", async (e) => {
        e.preventDefault();
        const formData = {
            title: document.getElementById("title").value.trim(),
            description: document.getElementById("description").value.trim(),
            endsAt: document.getElementById("endsAt").value,
        };

        try {
            await schema.validate(formData, { abortEarly: false });
            e.target.submit(); // ✅ submit if valid
        } catch (err) {
            // Clear previous errors
            document.querySelectorAll(".error").forEach(el => el.innerText = "");
            document.querySelectorAll("input, textarea").forEach(input => input.classList.remove("border-red-400", "border-green-500"));

            // Show new errors
            err.inner.forEach((validationError) => {
                const field = validationError.path;
                document.getElementById(field).classList.add("border-red-400");
                document.getElementById(`${field}Error`).innerText = validationError.message;
            });
        }
    });

    // Handle individual field validation on blur
    document.querySelectorAll("#autionForm input, #autionForm textarea").forEach(input => {
        input.addEventListener("blur", async (e) => {
            const field = e.target.name;
            const value = e.target.value;

            try {
                await schema.validateAt(field, { [field]: value });
                e.target.classList.remove("border-red-400");
                e.target.classList.add("border-green-500");
                document.getElementById(`${field}Error`).innerText = "";
            } catch (err) {
                e.target.classList.remove("border-green-500");
                e.target.classList.add("border-red-400");
                document.getElementById(`${field}Error`).innerText = err.message;
            }
        });
    });
    var error = "{{error}}";
    var success = "{{success}}";
    document.addEventListener("DOMContentLoaded", () => {
        if (error && error != "") {
            modal.classList.remove("hidden");
        }
        if (success && success != "") {
            modal.classList.remove("hidden");
        }
    });
</script>