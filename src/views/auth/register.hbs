{{!-- login.hbs --}}
{{!-- Uses layouts/auth.hbs --}}
<div class="min-h-screen flex flex-col md:flex-row">
    <!-- Left Section: Login Form -->
    <div class="flex-1 flex items-center justify-center bg-white p-8">
        <div class="w-full max-w-md">
            <div class="flex items-center mb-6">
                <div class="w-10 h-10 rounded-full bg-black text-white flex items-center justify-center font-bold">O
                </div>
                <span class="ml-2 text-xl font-semibold">Online Auction</span>
            </div>
            <h2 class="text-2xl font-bold mb-1">Sign Up.</h2>
            <p class="text-sm text-gray-500 mb-6">Provide your basic details to join</p>

            <form id="registerForm" method="post">
                {{#if errors}}
                <div class="mb-4 rounded-lg border border-red-300 bg-red-50 p-4 text-sm text-red-800" role="alert">
                    <span class="font-semibold">There were some problems with your submission:</span>
                    <ul class="mt-2 list-disc list-inside">
                        {{#each errors}}
                        <li>{{this}}</li>
                        {{/each}}
                    </ul>
                </div>
                {{/if}}
                {{#if success}}
                <div class="mb-4 rounded-lg border border-green-300 bg-green-50 p-4 text-sm text-green-800"
                    role="alert">
                    <span class="font-semibold">{{success}}</span>
                </div>
                {{/if}}
                {{#if error}}
                <div class="mb-4 rounded-lg border border-red-300 bg-red-50 p-4 text-sm text-red-800" role="alert">
                    <span class="font-semibold">{{error}}</span>
                </div>
                {{/if}}

                <div class="mb-4">
                    <input type="text" name="name" value="{{old.name}}" id="name" placeholder="Full name"
                        class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" />
                    <p id="nameError" class="text-red-500 text-xs"></p>
                </div>
                <div class="mb-4">
                    <input type="text" name="address" value="{{old.address}}" id="address" placeholder="Address"
                        class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" />
                    <p id="addressError" class="text-red-500 text-xs"></p>
                </div>
                <div class="mb-4">
                    <input type="email" name="email" id="email" value="{{old.email}}" placeholder="Email Address"
                        class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" />
                    <p id="emailError" class="text-red-500 text-xs"></p>
                </div>

                <div class="mb-2">
                    <div class="relative">
                        <input type="password" name="password" id="password" placeholder="Password"
                            class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500" />
                        <span id="visibility"
                            class="absolute right-3 top-4 text-gray-400 cursor-pointer fa fa-eye"></span>
                    </div>
                    <p id="passwordError" class="text-red-500 text-xs"></p>
                </div>

                <button type="submit"
                    class="w-full bg-blue-600 text-white py-3 rounded-md font-semibold hover:bg-blue-700 transition">Sign
                    Up</button>
            </form>

            <div class="my-6 flex items-center">
                <div class="flex-grow h-px bg-gray-300"></div>
                <span class="px-3 text-sm text-gray-500">or</span>
                <div class="flex-grow h-px bg-gray-300"></div>
            </div>

            <p class="text-sm text-center mt-6">Already have an account? <a href="/auth/login"
                    class="text-blue-600 hover:underline">Sign In</a></p>
        </div>
    </div>

    <!-- Right Section: Illustration -->
    <div class="hidden md:flex md:flex-1 items-center justify-center bg-blue-600 p-8 text-white relative">
        <div class="text-center max-w-sm">
            <img src="/images/bg.png" alt="Dashboard preview" class="rounded-xl mb-6 shadow-lg" />
            <h3 class="text-lg font-semibold mb-2">Online Auction Management System Using Algorithmic Game Theory.</h3>
            <p class="text-sm text-blue-100">Join the Online Auction community now!</p>
        </div>
    </div>

</div>
<script type="module">
    import * as yup from "https://cdn.jsdelivr.net/npm/yup@1.3.3/+esm";

    const schema = yup.object().shape({
        email: yup.string().email("Invalid email").required("Email is required"),
        password: yup.string().required("Password required"),
        name: yup.string().required("Please enter your full name"),
        address: yup.string().required("Address is required for items delivery"),
    });

    // Handle form submit
    document.querySelector("#registerForm").addEventListener("submit", async (e) => {
        e.preventDefault();
        const formData = {
            email: document.getElementById("email").value,
            password: document.getElementById("password").value,
            name: document.getElementById("name").value,
            address: document.getElementById("address").value,
        };

        try {
            await schema.validate(formData, { abortEarly: false });
            e.target.submit(); // âœ… submit if valid
        } catch (err) {
            // Clear previous errors
            document.querySelectorAll(".error").forEach(el => el.innerText = "");
            document.querySelectorAll("input").forEach(input => input.classList.remove("border-red-400", "border-green-500"));

            // Show new errors
            err.inner.forEach((validationError) => {
                const field = validationError.path;
                document.getElementById(field).classList.add("border-red-400");
                document.getElementById(`${field}Error`).innerText = validationError.message;
            });
        }
    });

    // Handle individual field validation on change/blur
    document.querySelectorAll("#registerForm input").forEach(input => {
        input.addEventListener("blur", async (e) => {
            const field = e.target.name;
            const value = e.target.value;

            try {
                await schema.validateAt(field, { [field]: value });
                e.target.classList.remove("border-red-400");
                e.target.classList.add("border-green-500");
                document.getElementById(`${field}Error`).innerText = "";
            } catch (err) {
                e.target.classList.remove("border-green-500");
                e.target.classList.add("border-red-400");
                document.getElementById(`${field}Error`).innerText = err.message;
            }
        });
    });
    document.querySelector("#visibility").addEventListener("click", (e) => {
        const passwordInput = document.getElementById("password");
        const currentType = passwordInput.getAttribute("type");

        if (currentType === "password") {
            passwordInput.setAttribute("type", "text");
            e.target.classList.remove("fa-eye");
            e.target.classList.add("fa-eye-slash");
        } else {
            passwordInput.setAttribute("type", "password");
            e.target.classList.add("fa-eye");
            e.target.classList.remove("fa-eye-slash");
        }
    });

</script>